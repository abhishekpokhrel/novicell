{"version":3,"sources":["logo.svg","components/layout/SignedInLInks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/wines/WineSummary.js","components/wines/WineList.js","config/fbConfig.js","components/dashboard/Dashboard.js","components/wines/WineDetails.js","components/auth/SignIn.js","store/actions/wineActions.js","components/wines/CreateWine.js","App.js","serviceWorker.js","store/reducers/wineReducer.js","store/reducers/authReducer.js","store/reducers/rootReucer.js","index.js"],"names":["module","exports","connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","SignedOutLinks","state","console","log","firebase","links","uid","WineSummary","wine","name","createdBy","createdAt","moment","toDate","toISOString","calendar","WineList","wines","map","id","key","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","useState","wineItems","setwineItems","useEffect","firestore","collection","onSnapshot","snapshot","retrievedTodos","forEach","doc","push","data","match","params","wineItem","setwineItem","description","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","test","alert","this","authError","onSubmit","htmlFor","onChange","Component","credents","credentials","signInWithEmailAndPassword","catch","createWine","getstate","getFirestore","useremail","add","Date","CreateWine","year","vineyard","history","App","path","exact","component","Dashboard","WineDetails","Boolean","window","location","hostname","initState","wineReducer","action","authReducer","rootReducer","combineReducers","firebaseReducer","store","createStore","compose","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.49c5180f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n    return(\r\n        <ul className=\"right\">\r\n            <li><NavLink to ='/createwine'>New Wine</NavLink></li>\r\n            <li><a onClick={props.signOut}>Log Out</a></li>\r\n            <li><NavLink to ='/' className='btn btn-floating pink lighten-1'>NN</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default  connect(null, mapDispatchToProps) (SignedInLinks)","export const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' })\r\n        }).catch((e) => {\r\n            dispatch({\r\n                type: 'LOGIN_ERROR', e\r\n            })\r\n\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n\r\n        });\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n    return(\r\n        <ul className=\"right\">\r\n            <li><NavLink to ='/signin'>Log In</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLInks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n    const { auth } = props;\r\n    console.log(auth);\r\n    const links = auth.uid ? <SignedInLinks/> : <SignedOutLinks/>;\r\n    return(\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"left-align brand-logo\">Home</Link>\r\n               {links}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(\"navbar\", state)\r\n    return{\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\r\nimport { defaultCipherList } from 'constants'\r\nimport moment from 'moment'\r\n\r\nconst WineSummary = ({wine}) => {\r\n    return(\r\n        <div className=\"card z-depth-0 wine-summary\">\r\n                <div className=\"card-content grey-text text-darken-3\">\r\n                    <span className=\"card-title\">{wine.name}</span>\r\n                    <p>Created By: {wine.createdBy}</p>\r\n                    <p className=\"grey-text\">{!!(wine.createdAt) ? moment(wine.createdAt.toDate().toISOString()).calendar() : \"\"}</p>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default WineSummary","import React from 'react'\r\nimport WineSummary from './WineSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst WineList = ({wines}) =>{\r\n    return(\r\n        <div className=\"wine-list section\">\r\n            {wines && wines.map(wine =>{\r\n                return(\r\n                    <Link to={'/wine/' + wine.id} key={wine.id}>\r\n                <WineSummary wine={wine} />\r\n                </Link>\r\n                )\r\n            })}\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default WineList","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDfEYlSg_enpw1WiKujme1l1b-G-zekz7A\",\r\n    authDomain: \"novicell.firebaseapp.com\",\r\n    databaseURL: \"https://novicell.firebaseio.com\",\r\n    projectId: \"novicell\",\r\n    storageBucket: \"novicell.appspot.com\",\r\n    messagingSenderId: \"657002675437\",\r\n    appId: \"1:657002675437:web:5e81ac034515bffaa760e4\",\r\n    measurementId: \"G-HCMVJ9MZLR\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n\r\n  export default firebase;","import React, { useState, useEffect } from 'react'\r\nimport WineList from '../wines/WineList'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport firebase from \"../../config/fbConfig\";\r\n\r\n//connect to redux store\r\nimport { connect } from 'react-redux'\r\n\r\nconst Dashboard = props => {\r\n    \r\n        const {wines, auth} = props;\r\n\r\n        const [wineItems, setwineItems] = useState([]); \r\n\r\n\t    useEffect(() => {\r\n\r\n\t\t    const db = firebase.firestore().collection('wines')\r\n\r\n            db.onSnapshot( snapshot => {\r\n            const retrievedTodos = []\r\n\r\n            snapshot.forEach( doc => {\r\n            retrievedTodos.push({...doc.data(), id: doc.id})\r\n            })\r\n\r\n            setwineItems(retrievedTodos)\r\n        })\r\n        },[])\r\n        console.log(\"list of wines\", wineItems)\r\n\r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n        return(\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\"></div>\r\n                    <WineList wines={wineItems}/>\r\n                    <div className=\"col s12 m5 offset-m1\"></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        wines: state.wine.wines,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Dashboard)","import React, { useState, useEffect } from 'react'\r\nimport firebase from \"../../config/fbConfig\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport moment from 'moment'\r\n\r\n\r\nconst WineDetails = (props) => {\r\n    const id = props.match.params.id;\r\n\r\n    const [wineItem, setwineItem] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        const db = firebase.firestore().collection('wines').doc(id)\r\n\r\n        db.onSnapshot(snapshot => {\r\n            setwineItem(snapshot.data())\r\n        })\r\n    }, [id])\r\n    console.log(\"specific wines\", wineItem)\r\n    debugger;\r\n\r\n\r\n    if (wineItem) {\r\n        const {auth} = props;\r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className=\"container section wine-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <span className=\"card-title\"> {wineItem.name}</span>\r\n                    <p>{wineItem.description}</p>\r\n                </div>\r\n                <div className=\"container grey\">\r\n                    <div>Created By: {wineItem.createdBy}</div>\r\n                    <div>{!!(wineItem.createdAt) ? moment(wineItem.createdAt.toDate().toISOString()).calendar() : \"\"}</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"container\"><p>Loading Wine............</p></div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(WineDetails)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n  class SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n        [e.target.id]: e.target.value\r\n    })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"yo state ho\", this.state)\r\n        this.props.signIn(this.state)\r\n    }\r\n\r\n    test = (e) => {\r\n        alert(\"this is working\")\r\n    }\r\n\r\n    render() {\r\n\r\n        const { authError, auth } = this.props;\r\n        if(auth.uid) return <Redirect to='/' />\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                <h5 className=\"grey-text text-darken-3\">\r\n                    Sign In\r\n                </h5>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"email\">Email:</label>\r\n                    <input type=\"text\" onChange={this.handleChange} id=\"email\"/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"password\">Password:</label>\r\n                    <input type=\"password\" onChange={this.handleChange} id=\"password\"/>\r\n                </div>\r\n\r\n                <div className=\"input-field\">\r\n                    <button className=\"btn\">Login</button>\r\n                    <div className=\"red-text center\"> {  authError ? <p>{authError}</p> : null }</div>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        authError : state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        signIn : (credents) => dispatch(signIn(credents))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","export const createWine = (wine) => {\r\n    return (dispatch, getstate, { getFirebase, getFirestore }) => {\r\n\r\n        const firestore = getFirestore();\r\n        console.log(\"what is this state\", getstate());\r\n        const useremail = getstate().firebase.auth.email;\r\n        firestore.collection('wines').add({\r\n            ...wine,\r\n            createdBy: useremail,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n\r\n        dispatch({ type: 'CREATE_WINE', wine })\r\n\r\n        }).catch((e) => {\r\n            dispatch({ type: 'CREATE_WINE_ERROR', e })\r\n        })\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createWine } from '../../store/actions/wineActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n  class CreateWine extends Component {\r\n    state = {\r\n        name: '',\r\n        year: '',\r\n        vineyard: '',\r\n        description: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n        [e.target.id]: e.target.value\r\n    })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state)\r\n        this.props.createWine(this.state)\r\n        this.props.history.push('/')\r\n\r\n    }\r\n\r\n    test = (e) => {\r\n        alert(\"this is working\")\r\n    }\r\n\r\n    render() {\r\n        const {auth} = this.props;\r\n\r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n        return(\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                <h5 className=\"grey-text text-darken-3\">\r\n                    Create Wine\r\n                </h5>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"name\">Name:</label>\r\n                    <input type=\"text\" onChange={this.handleChange} id=\"name\"/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"year\">Year:</label>\r\n                    <input type=\"number\" onChange={this.handleChange} id=\"year\"/>\r\n                </div>\r\n\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"vineyard\">Vineyard:</label>\r\n                    <input type=\"text\" onChange={this.handleChange} id=\"vineyard\"/>\r\n                </div>\r\n\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"description\">Description:</label>\r\n                    <textarea name=\"description\" id=\"description\" onChange={this.handleChange} className=\"materialize-textarea\"></textarea>\r\n                </div>\r\n\r\n                <div className=\"input-field\">\r\n                    <button className=\"btn\">Add Wine</button>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        createWine : (wine) => dispatch(createWine(wine))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateWine)","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport WineDetails from './components/wines/WineDetails'\nimport SignIn from './components/auth/SignIn'\nimport CreateWine from './components/wines/CreateWine'\n\nfunction App() {\n  return (\n\n    <BrowserRouter>\n    <div className=\"App\">\n      <Navbar/>\n      <Switch>\n          <Route path='/' exact component={Dashboard}/>\n          <Route path='/wine/:id' component={WineDetails} />\n          <Route path='/signin' component={SignIn}/>\n          <Route path='/createwine' component={CreateWine}/>\n      </Switch>\n\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { defaultCipherList } from \"constants\";\r\n\r\nconst initState = {\r\n    wines: [\r\n        {id: 1, name: 'first wine', year: '1111', vineyard: 'france', description: 'this is the best wine you can get'},\r\n        {id: 2, name: 'second wine', year: '2222', vineyard: 'italy', description: 'this is the okay wine you can get'},\r\n        {id: 3, name: 'third wine', year: '3333', vineyard: 'spain', description: 'this is the good wine you can get'}\r\n    ]\r\n}\r\n\r\nconst wineReducer = ( state = initState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'CREATE_WINE':\r\n            console.log('created wine', action.wine)\r\n            return state;\r\n        case 'CREATE_WINE_ERROR':\r\n            console.log('create wine error', action.e)\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default wineReducer","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error')\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success');\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n    return state\r\n}\r\n\r\nexport default authReducer","import wineReducer from './wineReducer'\r\nimport authReducer from './authReducer'\r\n//import other reducers if theres any\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nimport { combineReducers } from 'redux'\r\n\r\nconst rootReducer = combineReducers({\r\n    //we can name the reducers by any name we want\r\n    wine: wineReducer,\r\n    auth: authReducer,\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReucer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\nimport firebase from \"firebase/app\";\n\n\n//secondly, thunk comes later as a store enchancer\n//thirdly, use getfirebase and getfirestore to allow thunk to use extra arguments e.g. wineactions\n//fourthly, use compose to add multiple store enhancers e.g. reduxfirestore and pass firebase connection in it\nconst store = createStore(\n    rootReducer,\n    {}, \n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig)\n));\n\n\n//surround the application with the store\n//thirdly\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}